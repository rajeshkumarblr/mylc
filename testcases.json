{
  "1": {
    "category": "hash",
    "description": "Two Sum",
    "cases": [
      { "input": [2,7,11,15], "target": 9, "expected": [0,1] },
      { "input": [3,2,4], "target": 6, "expected": [1,2] }
    ]
  },
  "2": {
    "category": "list",
    "description": "Add Two Numbers",
    "cases": [
      { "l1": [2,4,3], "l2": [5,6,4], "expected": [7,0,8] }
    ]
  },
  "3": {
    "category": "sliding_window",
    "description": "Longest Substring Without Repeating Characters",
    "cases": [
      { "input": "abcabcbb", "expected": 3 },
      { "input": "bbbbb", "expected": 1 }
    ]
  },
  "9": {
    "category": "misc",
    "description": "Palindrome Number",
    "cases": [
      { "input": 121, "expected": true },
      { "input": -121, "expected": false },
      { "input": 10, "expected": false },
      { "input": 0, "expected": true },
      { "input": 12321, "expected": true },
      { "input": 123, "expected": false }
    ]
  },
  "11": {
    "category": "two_pointer",
    "description": "Container With Most Water",
    "cases": [
      { "input": [8,7,2,2], "expected": 7 },
      { "input": [1,8,6,2,5,4,8,3,7], "expected": 49 },
      { "input": [1,1], "expected": 1 },
      { "input": [4,3,2,1,4], "expected": 16 },
      { "input": [1,2,1], "expected": 2 },
      { "input": [1,2,4,3], "expected": 4 },
      { "input": [2,3,4,5,18,17,6], "expected": 17 },
      { "input": [1,3,2,5,25,24,5], "expected": 24 },
      { "input": [], "expected": 0 }
    ]
  },
  "21": {
    "category": "list",
    "description": "Merge Two Sorted Lists",
    "cases": [
      { "l1": [1,2,4], "l2": [1,3,4], "expected": [1,1,2,3,4,4] },
      { "l1": [], "l2": [], "expected": [] },
      { "l1": [], "l2": [0], "expected": [0] },
      { "l1": [2], "l2": [1], "expected": [1,2] },
      { "l1": [1,3,5], "l2": [2,4,6], "expected": [1,2,3,4,5,6] },
      { "l1": [1,2,3], "l2": [], "expected": [1,2,3] },
      { "l1": [], "l2": [1,2,3], "expected": [1,2,3] }
    ]
  },
  "42": {
    "category": "two_pointer",
    "description": "Trapping Rain Water",
    "cases": [
      { "input": [0,1,0,2,1,0,1,3,2,1,2,1], "expected": 6 },
      { "input": [4,2,0,3,2,5], "expected": 9 },
      { "input": [1,2,3,4,5], "expected": 0 },
      { "input": [5,4,1,2], "expected": 1 },
      { "input": [2,0,2], "expected": 2 },
      { "input": [], "expected": 0 }
    ]
  },
  "94": { 
    "category": "tree",
    "description": "Binary Tree Inorder Traversal",
    "cases": [
      { "tree": [1,null,2,3], "expected": [1,3,2] },
      { "tree": [], "expected": [] },
      { "tree": [1], "expected": [1] },
      { "tree": [1,2], "expected": [2,1] },
      { "tree": [1,null,2], "expected": [1,2] }
    ]
  },
  "104": {
    "category": "tree",
    "description": "Maximum Depth of Binary Tree",
    "cases": [
      { "tree": [3,9,20,null,null,15,7], "expected": 3 },
      { "tree": [], "expected": 0 },
      { "tree": [1], "expected": 1 },
      { "tree": [1,2], "expected": 2 },
      { "tree": [1,2,3,4,5,null,7], "expected": 3 },
      { "tree": [1,2,null,3,null,4], "expected": 4 },
      { "tree": [1,null,2,null,3,null,4], "expected": 4 },
      { "tree": [1,2,null,3,null,4,null,5], "expected": 5 }
    ]
  },
  "110": {
    "category": "tree",
    "description": "Balanced Binary Tree",
    "cases": [
      { "tree": [3,9,20,null,null,15,7], "expected": true },
      { "tree": [], "expected": true },
      { "tree": [1], "expected": true },
      { "tree": [1,2], "expected": true },
      { "tree": [1,2,2,3,3,null,null,4,4], "expected": false },
      { "tree": [1,2,null,3,null,4,null,5], "expected": false },
      { "tree": [1,null,2,null,3,null,4], "expected": false },
      { "tree": [1,2,3,4,5,null,7], "expected": true }
    ]
  },
  "424": {
    "category": "sliding_window",
    "description": "Longest Repeating Character Replacement",
    "cases": [
      { "input": "AABABBA", "k": 1, "expected": 4 },
      { "input": "ABAB", "k": 2, "expected": 4 },
      { "input": "AAAA", "k": 2, "expected": 4 },
      { "input": "ABCDE", "k": 1, "expected": 2 },
      { "input": "AABABBA", "k": 2, "expected": 5 }
    ]
  },
  "438": {
    "category": "sliding_window",
    "description": "Find All Anagrams in a String",
    "cases": [
      { "s": "cbaebabacd", "p": "abc", "expected": [0,6] },
      { "s": "abab", "p": "ab", "expected": [0,1,2] },
      { "s": "baa", "p": "aa", "expected": [1] },
      { "s": "abc", "p": "def", "expected": [] }
    ]
  },
  "567": {
    "category": "sliding_window",
    "description": "Permutation in String",
    "cases": [
      { "s1": "ab", "s2": "eidbaooo", "expected": true },
      { "s1": "ab", "s2": "eidboaoo", "expected": false },
      { "s1": "adc", "s2": "dcda", "expected": true },
      { "s1": "a", "s2": "a", "expected": true },
      { "s1": "a", "s2": "b", "expected": false }
    ]
  }
}